// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/gin-gonic/gin"
	"go.uber.org/zap"
	"myapp/internal/http/controllers"
	"myapp/internal/http/routes"
	"myapp/pkg/config"
	"myapp/pkg/database"
	"myapp/pkg/repository"
	"myapp/pkg/services"
)

// Injectors from wire.go:

func InitializeApp() (*gin.Engine, error) {
	configConfig := config.NewConfig()
	db, err := database.Connect(configConfig)
	if err != nil {
		return nil, err
	}
	gormRepo := repository.NewGormRepo()
	weatherService := services.NewWeatherService(gormRepo)
	v := _wireValue
	logger, err := zap.NewProduction(v...)
	if err != nil {
		return nil, err
	}
	weatherController := controllers.NewWeatherController(weatherService, logger)
	subscriptionService := services.NewSubscriptionService(gormRepo, gormRepo)
	subscriptionController := controllers.NewSubscriptionController(subscriptionService, logger)
	engine := routes.NewRouter(configConfig, db, weatherController, subscriptionController)
	return engine, nil
}

var (
	_wireValue = []zap.Option{}
)
